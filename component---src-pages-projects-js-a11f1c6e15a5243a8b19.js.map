{"version":3,"sources":["webpack:///./src/components/image_affirmations.js","webpack:///./src/components/image_calculator.js","webpack:///./src/components/image_clock.js","webpack:///./src/components/image_compass.js","webpack:///./src/components/image_flashcards.js","webpack:///./src/components/image_gifsearch.js","webpack:///./src/components/image_jsdrumkit.js","webpack:///./src/components/image_madlibs.js","webpack:///./src/components/image_meditations.js","webpack:///./src/components/image_notes.js","webpack:///./src/components/image_pomodoro.js","webpack:///./src/components/image_rr4spa.js","webpack:///./src/components/image_socketchat.js","webpack:///./src/components/image_tasklist.js","webpack:///./src/components/image_tictactoe.js","webpack:///./src/components/image_webcam_artist.js","webpack:///./src/pages/Projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/image_profile.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["ImageCompass","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2285402285","_2590493967","_1773062336","_2660493860","_1486198207","ImageGifSearch","_2285901988","_2955032401","_1072313545","_2249509423","ImageNotes","_2271500253","ImagePomodoro","_690677371","ImageRR4ASPA","_4268048547","ImageSocketChat","_3152026062","_376425964","_431064826","_3010428069","Projects","layout","seo","title","id","href","target","rel","className","image_flashcards","alt","image_tasklist","image_jsdrumkit","image_tictactoe","image_calculator","image_clock","image_meditations","image_madlibs","image_webcam_artist","image_rr4spa","image_gifsearch","image_affirmations","image_pomodoro","image_notes","image_socketchat","image_compass","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","ImageProfile","style","borderRadius","_3914367306","Header","siteTitle","image_profile","margin","to","window","Layout","Fragment","Helmet","type","media","onload","components_header","background","padding","color","Date","getFullYear","textDecoration","_755544856","node"],"mappings":"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","file":"component---src-pages-projects-js-a11f1c6e15a5243a8b19.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"affirmations.jpeg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"calculator.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"clock.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"compass.jpeg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"flashcards.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageGifSearch = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gifsearch.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageGifSearch\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"jsdrumkit.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"madlibs.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"meditations.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageNotes = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"notes.jpeg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageNotes\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImagePomodoro = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"pomodoro.jpeg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImagePomodoro\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageRR4ASPA = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"rr4spa.jpeg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageRR4ASPA\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageSocketChat = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"socket_chat.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageSocketChat\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"tasklist.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"tictactoe.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageCompass = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"webcam_artist.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default ImageCompass\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport ImageAffirmations from \"../components/image_affirmations\"\nimport ImageCalculator from \"../components/image_calculator\"\nimport ImageClock from \"../components/image_clock\"\nimport ImageCompass from \"../components/image_compass\"\nimport ImageFlashcards from \"../components/image_flashcards\"\nimport ImageGifSearch from \"../components/image_gifsearch\"\nimport ImageJSDrumkit from \"../components/image_jsdrumkit\"\nimport ImageMadlibs from \"../components/image_madlibs\"\nimport ImageMeditations from \"../components/image_meditations\"\nimport ImageNotes from \"../components/image_notes\"\nimport ImagePomodoro from \"../components/image_pomodoro\"\nimport ImageRR4SPA from \"../components/image_rr4spa\"\nimport ImageSocketChat from \"../components/image_socketchat\"\nimport ImageTasklist from \"../components/image_tasklist\"\nimport ImageTictactoe from \"../components/image_tictactoe\"\nimport ImageWebcamArtist from \"../components/image_webcam_artist\"\n\nimport './Projects.css'\n\nconst Projects = () => (\n  <Layout>\n    <SEO title=\"Projects\" />\n    <section id=\"projects-container\">\n\n      <a href=\"https://usarneme-flashcards.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card flashcards\">\n        <ImageFlashcards className=\"portfolio-image\" alt=\"The Flashcards app.\" />\n        <h4>Flashcards</h4>\n        <small>for learning</small>\n        <p>A full-stack NodeJS (Express) + ReactJS flashcard application.</p>\n      </a>\n\n      <a href=\"https://ididnotknowicoulddothat.github.io/public/sites/task_list_app/build/index.html\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card task\">\n        <ImageTasklist className=\"portfolio-image\" alt=\"The Task List app.\" />\n        <h4>Task List</h4>\n        <small>for not forgetting</small>\n        <p>A task list application you can use for grocery lists or generally getting your life together. Available to download as a Progressive Web App to run on almost all devices!</p>\n      </a>\n\n      <a href=\"http://js-drumkit.surge.sh/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card drumkit\">\n        <ImageJSDrumkit className=\"portfolio-image\" alt=\"The Keyboard Drumkit.\" />\n        <h4>Keyboard Drumkit</h4>            \n        <small>you're a producer</small>\n        <p>A simple drumkit with tom, high hat, open hat, kick, ride, snare, tink, clap and boom sounds mapped to keyboard buttons. Music production has never been so easy!</p>\n      </a>\n\n      <a href=\"https://ididnotknowicoulddothat.github.io/public/sites/ttt/build/index.html\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card ttt\">\n        <ImageTictactoe className=\"portfolio-image\" alt=\"The Tic Tac Toe app.\" />\n        <h4>Tic Tac Toe Game</h4>\n        <small>for Joshua</small>\n        <p>Sometimes the only way to win is to not play the game. But give this fun tic tac toe game a try anyway.</p>\n      </a>\n\n      <a href=\"https://ididnotknowicoulddothat.github.io/public/sites/jscalc/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card calc\">\n        <ImageCalculator className=\"portfolio-image\" alt=\"The Calculator app.\" />\n        <h4>Calculator</h4>\n        <small>for the maths</small>\n        <p>A four function + - * / calculator. Available to download as a Progressive Web Application! You can save this as a standalone application on your phone/tablet/ChromeOS or desktop PC.</p>\n      </a>\n\n      <a href=\"http://js-analog-clock.surge.sh/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card clock\">\n        <ImageClock className=\"portfolio-image\" alt=\"The Analog Clock.\" />\n        <h4>Analog Clock</h4>\n        <small>technically still digital</small>\n        <p>A digital analog clock. Or rather an analog digital clock. Simple but sort of hypnotic due to cubic-bezier transitions of the clock's hands.</p>\n      </a>\n\n      <a href=\"https://ididnotknowicoulddothat.github.io/public/sites/meditations/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card article\">\n        <ImageMeditations className=\"portfolio-image\" alt=\"The Meditations app.\" />\n        <h4>Meditations</h4>\n        <small>for living well</small>\n        <p>Read a passage at random from Meditations; the diary of the Stoic emperor Marcus Aurelius.</p>\n      </a>\n\n      <a href=\"https://ididnotknowicoulddothat.github.io/public/sites/med_mad/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImageMadlibs className=\"portfolio-image\" alt=\"The Stoic Madlib app.\" />\n        <h4>Stoic Madlib Game</h4>\n        <small>for Marcus</small>\n        <p>A web app version of the purportedly popular madlib game using as a source material Meditations by Marcus Aurelius.</p>\n      </a>\n\n      <a href=\"https://ididnotknowicoulddothat.github.io/public/sites/webcam_artist\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImageWebcamArtist className=\"portfolio-image\" alt=\"The Stoic Madlib app.\" />\n        <h4>Webcam Artist</h4>\n        <small>green screen selfies</small>\n        <p>A fun way to play with video effects using your computer's webcam. Apply visual effects like color shifting to sepia tone. A green screen effect is possible by adjusting color sliders to match the background color behind you. Try other fun effects and combinations!</p>\n      </a>\n\n      <a href=\"http://rrspa.surge.sh/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImageRR4SPA className=\"portfolio-image\" alt=\"The React Router 4 Single Page application.\" />\n        <h4>Single Page Application Built on React Router (v4)</h4>\n        <small>hey you didn't really change pages</small>\n        <p>A test demonstration of a single page application built using React Router for all front-end page routing. HTML5 push state updates history and emulates normal page navigation for bread-crumbing. However no requests are sent to the server so the page load is essentially instantaneous.</p>\n      </a>\n\n      <a href=\"https://gifsearch4.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImageGifSearch className=\"portfolio-image\" alt=\"The Stoic Madlib app.\" />\n        <h4>Gif Search</h4>\n        <small>search up to 20 gifs per hour!</small>\n        <p>Input a key word or phrase into the search bar and watch as this front-end application instantly loads up new GIFs! Well, almost instantly via AJAX and no page reloads. This also implements an infinite scroll whereby getting near the bottom of the page causes the page to send another AJAX request for more data which is then appended. Never run out of GIFs!* *-Powered by the Giphy API which is awesome and free but throttles your requests.</p>\n      </a>\n\n      <a href=\"http://yoon.surge.sh/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImageAffirmations className=\"portfolio-image\" alt=\"Positive Affirmations and Self Care Activities app.\" />\n        <h4>Positive Affirmations & Self Care Activities</h4>\n        <small>treat yourself well</small>\n        <p>We can all use a reminder of something great or a suggestion of something to do for ourselves once in a while.</p>\n      </a>\n\n      <a href=\"http://pomo-doro.surge.sh/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImagePomodoro className=\"portfolio-image\" alt=\"The Pomodoro app.\" />\n        <h4>Pomodoro</h4>\n        <small>what was I doing again?</small>\n        <p>The Pomodoro technique is a way of focusing your energies for the greatest productivity and output. By using spaced repetition and breaks you can reinforce learning or set yourself up for highly productive focus time while working. The timer dings when it's time to take a break. Return after the appropriate break length refreshed and ready to work at your full potential.</p>\n      </a>\n\n      <a href=\"https://hero5-run.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImageNotes className=\"portfolio-image\" alt=\"The Take Note app.\" />\n        <h4>Take Note</h4>\n        <small>don't you forget about me</small>\n        <p>A simple note taking app when you're on the run. Quick chat saves to localStorage every 10 seconds anything you type into the full screen textarea.</p>\n      </a>\n      <a href=\"https://usarneme-socket-chat.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImageSocketChat className=\"portfolio-image\" alt=\"The WebSockets powered by SocketIO Chat app.\" />\n        <h4>Socket Chat</h4>\n        <small>talk about more than just wrenches</small>\n        <p>Built on ExpressJS and powered by Socket.io this socket chat application allows for instant transimission of chat messages between all connected users. All chat data is stored in an mLab-hosted MongoDB database (through Express Mongoose).</p>\n      </a>\n\n      <a href=\"https://ididnotknowicoulddothat.github.io/public/sites/compass/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"project card meditations\">\n        <ImageCompass className=\"portfolio-image\" alt=\"A speedometer in the browser\" />\n        <h4>Compass and Speedometer</h4>\n        <small>not useful for desktops</small>\n        <p>Testing out different web APIs such as the Compass and speedometer/accelerometer.</p>\n      </a>\n\n    </section>\n  </Layout>\n)\n\nexport default Projects\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageProfile = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"me_square.jpg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} style={{ borderRadius: `50%` }} />}\n  />\n)\nexport default ImageProfile\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport ImageProfile from \"../components/image_profile\"\n\nimport \"./header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div className=\"header-container\">\n      <div className=\"image-container\">\n        <ImageProfile />\n      </div>\n\n      <h1 style={{ margin: `20px 0` }}>\n        <Link to=\"/\" className=\"site-title\">\n          {siteTitle}\n        </Link>\n      </h1> \n\n      <Link to=\"/\" className={typeof window !== \"undefined\" && (window.location.pathname !== \"/Projects/\" && window.location.pathname !== \"/CV/\") ? \"nav-link active-nav\" : \"nav-link\"}>Home</Link>\n      <Link to=\"/CV/\" className={typeof window !== \"undefined\" && window.location.pathname === \"/CV/\" ? \"nav-link active-nav\" : \"nav-link\"}>CV</Link>\n      <Link to=\"/Projects/\" className={typeof window !== \"undefined\" && window.location.pathname === \"/Projects/\" ? \"nav-link active-nav\" : \"nav-link\"}>Projects</Link>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" media=\"none\" onload=\"this.media='all';\" />\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.rawgit.com/konpa/devicon/df6431e323547add1b4cf45992913f15286456d3/devicon.min.css\" media=\"none\" onload=\"this.media='all';\" />\n          <link href=\"https://fonts.googleapis.com/css?family=Anonymous+Pro&display=swap\" rel=\"stylesheet\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n        <footer style={{background: `rebeccapurple`, padding: `25px`, color: `rgba(255,255,255,0.75)`}}>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\" style={{ textDecoration: `none`, color: `white` }}>Gatsby</a>\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}